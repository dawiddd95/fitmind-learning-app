# Specyfikacja OpenAPI w wersji 3.0.0
openapi: 3.0.0
# Informacje o API, takie jak tytuł, wersja i opis
info:
  title: Audit Service API # Tytuł API
  version: 1.0.0 # Wersja API
  description: API do zarządzania logami audytu.

# Definicje ścieżek i operacji API
paths:
  # Ścieżka do logów audytowych
  /logs:
    # Operacja POST do tworzenia pojedynczego logu
    post:
      # Krótki opis operacji
      summary: Tworzy pojedynczy log audytowy
      # Treść żądania z danymi logu
      requestBody:
        # Opis danych w żądaniu
        description: Dane logu audytowego
        # Określa, że dane w żądaniu są wymagane
        required: true
        # Format danych w żądaniu
        content:
          application/json:
            # Schemat danych w treści żądania
            schema:
              # Typ danych w treści (obiekt)
              type: object
              # Lista właściwości obiektu
              properties:
                # Definicja pola `eventType`
                eventType:
                  # Typ danych (ciąg znaków)
                  type: string
                  # Przykładowa wartość
                  example: USER_LOGIN
                  # Opis pola
                  description: Typ zdarzenia
                # Definicja pola `performedBy`
                performedBy:
                  type: string
                  example: john.doe@example.com
                  description: Użytkownik, który wykonał akcję
                # Definicja pola `service`
                service:
                  type: string
                  example: auth-service
                  description: Serwis, który wygenerował log
                # Definicja pola `status`
                status:
                  type: string
                  enum: [SUCCESS, FAILURE]
                  example: SUCCESS
                  description: Status operacji
                # Definicja pola `severity`
                severity:
                  type: string
                  enum: [INFO, WARNING, ERROR]
                  example: INFO
                  description: Poziom ważności logu
                # Definicja pola `ipAddress`
                ipAddress:
                  type: string
                  example: 192.168.0.1
                  description: Adres IP użytkownika
                # Definicja pola `location`
                location:
                  type: string
                  example: Warsaw, Poland
                  description: Lokalizacja użytkownika
                # Definicja pola `metadata`
                metadata:
                  type: object
                  example: { details: "User logged in successfully" }
                  description: Dodatkowe szczegóły dotyczące logu
      # Definicja odpowiedzi na żądanie
      responses:
        # Odpowiedź w przypadku sukcesu
        '201':
          # Opis odpowiedzi
          description: Log został utworzony
          # Format danych w odpowiedzi
          content:
            application/json:
              # Schemat danych w odpowiedzi
              schema:
                # Typ danych w odpowiedzi (obiekt)
                type: object
                # Lista właściwości obiektu odpowiedzi
                properties:
                  id:
                    type: integer
                    example: 1
                    description: ID utworzonego logu
        # Odpowiedź w przypadku błędu
        '400':
          description: Błąd walidacji danych

    # Operacja GET do pobierania logów z opcjonalnym filtrowaniem
    get:
      # Krótki opis operacji
      summary: Pobiera logi z opcjonalnym filtrowaniem
      # Lista obsługiwanych parametrów w zapytaniu
      parameters:
        - name: eventType
          # Parametr w query stringu
          in: query
          # Typ parametru
          schema:
            type: string
          # Opis parametru
          description: Filtruj po typie zdarzenia
        - name: performedBy
          in: query
          schema:
            type: string
          description: Filtruj po użytkowniku
        - name: service
          in: query
          schema:
            type: string
          description: Filtruj po serwisie
        - name: severity
          in: query
          schema:
            type: string
            enum: [INFO, WARNING, ERROR]
          description: Filtruj po poziomie ważności
        - name: status
          in: query
          schema:
            type: string
            enum: [SUCCESS, FAILURE]
          description: Filtruj po statusie akcji
        - name: startDate
          in: query
          schema:
            type: string
            format: date-time
          description: Filtruj logi od tej daty
        - name: endDate
          in: query
          schema:
            type: string
            format: date-time
          description: Filtruj logi do tej daty
      # Definicja odpowiedzi na żądanie
      responses:
        # Odpowiedź w przypadku sukcesu
        '200':
          description: Lista logów
          content:
            application/json:
              # Typ danych w odpowiedzi (tablica obiektów)
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                      example: 1
                    eventType:
                      type: string
                      example: USER_LOGIN
                    performedBy:
                      type: string
                      example: john.doe@example.com
                    service:
                      type: string
                      example: auth-service
                    status:
                      type: string
                      example: SUCCESS
                    severity:
                      type: string
                      example: INFO
                    timestamp:
                      type: string
                      format: date-time
                      example: 2023-01-01T12:00:00Z
        # Odpowiedź w przypadku błędu serwera
        '500':
          description: Błąd serwera

  # Ścieżka do pobierania logu na podstawie ID
  /logs/{id}:
    # Operacja GET dla logu o podanym ID
    get:
      # Krótki opis operacji
      summary: Pobiera szczegóły logu na podstawie ID
      # Parametr w ścieżce
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
          description: ID logu
      # Definicja odpowiedzi na żądanie
      responses:
        # Odpowiedź w przypadku sukcesu
        '200':
          description: Szczegóły logu
          content:
            application/json:
              # Schemat danych w odpowiedzi
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    example: 1
                  eventType:
                    type: string
                    example: USER_LOGIN
                  performedBy:
                    type: string
                    example: john.doe@example.com
                  service:
                    type: string
                    example: auth-service
                  status:
                    type: string
                    example: SUCCESS
                  severity:
                    type: string
                    example: INFO
                  timestamp:
                    type: string
                    format: date-time
                    example: 2023-01-01T12:00:00Z
        # Odpowiedź w przypadku błędu
        '404':
          description: Log nie został znaleziony

  # Ścieżka do eksportowania logów
  /logs/export:
    # Operacja GET do eksportu logów
    get:
      # Krótki opis operacji
      summary: Eksportuje logi w formacie JSON lub CSV
      # Parametry obsługiwane w zapytaniu
      parameters:
        - name: format
          in: query
          schema:
            type: string
            enum: [json, csv]
          description: Format eksportu
      # Definicja odpowiedzi na żądanie
      responses:
        # Odpowiedź w przypadku sukcesu
        '200':
          description: Dane logów w wybranym formacie
        # Odpowiedź w przypadku błędu serwera
        '500':
          description: Błąd serwera

  # Ścieżka do statystyk logów
  /logs/stats:
    # Operacja GET do pobierania statystyk logów
    get:
      # Krótki opis operacji
      summary: Pobiera statystyki logów
      # Definicja odpowiedzi na żądanie
      responses:
        # Odpowiedź w przypadku sukcesu
        '200':
          description: Statystyki logów
          content:
            application/json:
              schema:
                type: object
                properties:
                  totalLogs:
                    type: integer
                    example: 1000
                    description: Łączna liczba logów
                  logsByEventType:
                    type: array
                    items:
                      type: object
                      properties:
                        eventType:
                          type: string
                          example: USER_LOGIN
                        count:
                          type: integer
                          example: 500
                  logsByService:
                    type: array
                    items:
                      type: object
                      properties:
                        service:
                          type: string
                          example: auth-service
                        count:
                          type: integer
                          example: 800
        # Odpowiedź w przypadku błędu serwera
        '500':
          description: Błąd serwera
